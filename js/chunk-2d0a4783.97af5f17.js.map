{"version":3,"sources":["webpack:///./src/views/Request.vue","webpack:///./src/views/Request.vue?a27a"],"names":["class","loading","request","back","title","name","phone","currency","amount","type","status","id","hasChanges","update","remove","$route","params","setup","route","router","store","value","dispatch","push","data","components","AppPage","AppLoader","AppStatus","render"],"mappings":"qJAGO,eAAqB,cAAb,QAAI,G,EACZ,eAAsB,cAAd,SAAK,G,EACb,eAAsB,cAAd,SAAK,G,EAEd,eAAuB,cAAf,UAAM,G,iBAAS,M,GAGpBA,MAAM,gB,2OAYFA,MAAM,0B,8HArBC,EAAAC,S,iBAAlB,eAAwC,YACE,EAAAC,S,iBAA1C,eAmBW,G,MAnBDC,KAAA,GAAKC,MAAM,W,yBACnB,iBAAgD,CAAhD,eAAgD,UAA7C,E,eAAqB,KAAE,eAAG,EAAAF,QAAQG,MAAI,KACzC,eAAkD,UAA/C,E,eAAsB,KAAE,eAAG,EAAAH,QAAQI,OAAK,KAC3C,eAA6D,UAA1D,E,eAAsB,KAAE,eAAG,EAAAC,SAAS,EAAAL,QAAQM,SAAM,KACrD,eAGI,UAFF,E,EACA,eAAoE,GAAvDC,KAAM,EAAAP,QAAQQ,Q,yBAAQ,iBAAoB,C,8BAAjB,EAAAR,QAAQQ,QAAM,O,mBAEtD,eAQM,MARN,EAQM,C,eAPJ,eAMS,UANDL,KAAK,GAAGM,GAAG,G,qDAAY,EAAAD,OAAM,K,CACnC,G,cAD6B,EAAAA,YAQS,EAAAE,Y,iBAA1C,eAAqE,U,MAA7DZ,MAAM,MAAO,QAAK,8BAAE,EAAAa,QAAA,EAAAA,OAAA,sBAA0B,W,sBACtD,eAA0D,UAAlDb,MAAM,aAAc,QAAK,8BAAE,EAAAc,QAAA,EAAAA,OAAA,sBAAQ,c,yBAE7C,eAEK,KAFL,EAA0C,wBACpB,eAAG,EAAAC,OAAOC,OAAOL,IAAE,I,gHAa5B,GACbM,MADa,WAEX,IAAMC,EAAQ,iBACRC,EAAS,iBACTC,EAAQ,iBACRnB,EAAU,gBAAI,GACdC,EAAU,eAAI,IACdQ,EAAS,iBAEf,eAAS,wCAAC,2GACRT,EAAQoB,OAAQ,EADR,SAEcD,EAAME,SAAS,mBAAoBJ,EAAMF,OAAOL,IAF9D,OAERT,EAAQmB,MAFA,OAGRX,EAAOW,MAAP,UAAenB,EAAQmB,aAAvB,aAAe,EAAeX,OAC9BT,EAAQoB,OAAQ,EAJR,4CAOV,IAAMT,EAAa,gBAAS,kBAAMV,EAAQmB,MAAMX,SAAWA,EAAOW,SAE5DP,EAAK,yDAAI,8GACPM,EAAME,SAAS,iBAAkBJ,EAAMF,OAAOL,IADvC,OAEbQ,EAAOI,KAAK,KAFC,2CAAJ,qDAKLV,EAAK,yDAAI,2GACTW,EADS,iCACAtB,EAAQmB,OADR,IACeX,OAAQA,EAAOW,MAAOV,GAAGO,EAAMF,OAAOL,KADrD,SAEPS,EAAME,SAAS,iBAAkBE,GAF1B,OAGbtB,EAAQmB,MAAMX,OAAOA,EAAOW,MAHf,2CAAJ,qDAMX,MAAO,CAAEpB,UAASC,UAASK,SAAA,OAAUM,SAAQC,SAAQJ,SAAQE,eAE/Da,WAAY,CAAEC,UAAA,KAASC,YAAA,KAAWC,YAAA,OChEpC,EAAOC,OAASA,EAED","file":"js/chunk-2d0a4783.97af5f17.js","sourcesContent":["<template>\r\n  <app-loader v-if=\"loading\"></app-loader>\r\n  <app-page back title=\"Request\" v-else-if=\"request\">\r\n    <p><strong>Name</strong>: {{ request.name }}</p>\r\n    <p><strong>Phone</strong>: {{ request.phone }}</p>\r\n    <p><strong>Count</strong>: {{ currency(request.amount) }}</p>\r\n    <p>\r\n      <strong>Status</strong>:\r\n      <app-status :type=\"request.status\">{{ request.status }}</app-status>\r\n    </p>\r\n    <div class=\"form-control\">\r\n      <select name=\"\" id=\"\" v-model=\"status\">\r\n        <option disabled selected>Check status</option>\r\n        <option value=\"done\">Done</option>\r\n        <option value=\"cancelled\">Cancelled</option>\r\n        <option value=\"active\">Active</option>\r\n        <option value=\"pending\">Pending</option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn\" @click=\"update\" v-if=\"hasChanges\">Update</button>\r\n    <button class=\"btn danger\" @click=\"remove\">Remove</button>\r\n  </app-page>\r\n  <h3 v-else class=\"text-center text-white\">\r\n    No request whit ID= {{ $route.params.id }}\r\n  </h3>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nimport AppPage from '../components/ui/AppPage.vue';\r\nimport AppLoader from '../components/ui/AppLoader.vue';\r\nimport AppStatus from '../components/ui/AppStatus.vue';\r\nimport { currency } from '../utils/currency-formatter';\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const store = useStore();\r\n    const loading = ref(true);\r\n    const request = ref({});\r\n    const status = ref();\r\n\r\n    onMounted(async () => {\r\n      loading.value = true;\r\n      request.value = await store.dispatch('request/loadById', route.params.id);\r\n      status.value = request.value?.status;\r\n      loading.value = false;\r\n    });\r\n\r\n    const hasChanges = computed(() => request.value.status !== status.value);\r\n\r\n    const remove = async () => {\r\n      await store.dispatch('request/remove', route.params.id);\r\n      router.push('/');\r\n    };\r\n\r\n    const update = async () => {\r\n    const data={...request.value, status: status.value, id:route.params.id}\r\n      await store.dispatch('request/update', data);\r\n      request.value.status=status.value\r\n    };\r\n\r\n    return { loading, request, currency, update, remove, status, hasChanges };\r\n  },\r\n  components: { AppPage, AppLoader, AppStatus },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import { render } from \"./Request.vue?vue&type=template&id=96481692\"\nimport script from \"./Request.vue?vue&type=script&lang=js\"\nexport * from \"./Request.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}