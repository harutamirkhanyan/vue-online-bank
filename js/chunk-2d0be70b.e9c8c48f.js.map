{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","isTooManyAttempts","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","submitCount","useField","yup","trim","required","value","errorMessage","handleBlur","MIN_LENGTH","min","computed","watch","val","setTimeout","values","dispatch","push","setup","render"],"mappings":"2IAEI,eAAwB,UAApB,mBAAe,G,EAGjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAKxB,eAAsC,SAA/BA,IAAI,YAAW,YAAQ,G,mBAY3BC,MAAM,e,gDArBb,eAsBO,QAtBDA,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EAEA,eAIM,OAJAD,MAAK,yBAA8B,EAAAE,U,CACvC,E,eACA,eAA+D,SAAxDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAEhC,eAIM,OAJAF,MAAK,yBAA8B,EAAAO,U,CACvC,E,eACA,eAAwE,SAAjEJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAMS,UALPP,MAAM,cACNG,KAAK,SACJO,SAAU,EAAAC,cAAgB,EAAAC,mBAC5B,UAED,gBAC+B,EAAAA,mB,iBAA/B,eAA4D,MAA5D,EAAkD,S,uIChB/C,SAASC,IACd,IAAMC,EAAQC,iBACRC,EAASC,iBAFc,EAIuBC,iBAA5CC,EAJqB,EAIrBA,aAAcR,EAJO,EAIPA,aAAcS,EAJP,EAIOA,YAJP,EAKqCC,eAChE,QACAC,SAEGC,OACAC,WACAnB,MAAM,kCANIA,EALc,EAKrBoB,MAA4BvB,EALP,EAKPwB,aAAkCpB,EAL3B,EAKeqB,WAStCC,EAAa,EAdU,EAmBzBP,eACF,WACAC,SAEGC,OACAC,SAAS,6BACTK,IAAID,EAJP,4CAIwDA,KATjDpB,EAhBoB,EAgB3BiB,MACclB,EAjBa,EAiB3BmB,aACYjB,EAlBe,EAkB3BkB,WAUIf,EAAoBkB,gBAAS,WACjC,OAAOV,EAAYK,OAAS,KAG9BM,eAAMnB,GAAmB,SAACoB,GACpBA,GACFC,YAAW,WACTb,EAAYK,MAAQ,IACnB,SAIP,IAAMxB,EAAWkB,EAAY,yDAAC,WAAMe,GAAN,iGACtBpB,EAAMqB,SAAS,aAAcD,GADP,OAE5BlB,EAAOoB,KAAK,KAFgB,2CAAD,uDAK7B,MAAO,CACL/B,QACAH,SACAI,QACAE,WACAD,SACAE,QACAmB,aACA3B,WACAU,eACAS,cACAR,qBDlCW,OACbyB,MADa,WAEX,yBAAYxB,OE3BhB,EAAOyB,OAASA,EAED","file":"js/chunk-2d0be70b.e9c8c48f.js","sourcesContent":["<template>\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n    <h1>Login in System</h1>\r\n\r\n    <div :class=\"['form-control', { invalid: eError }]\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\" />\r\n      <small v-if=\"eError\">{{ eError }}</small>\r\n    </div>\r\n    <div :class=\"['form-control', { invalid: pError }]\">\r\n      <label for=\"password\">Password</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\" />\r\n      <small v-if=\"pError\">{{ pError }}</small>\r\n    </div>\r\n\r\n    <button\r\n      class=\"btn primary\"\r\n      type=\"submit\"\r\n      :disabled=\"isSubmitting || isTooManyAttempts\"\r\n    >\r\n      Login\r\n    </button>\r\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">text</div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { useLoginForm } from '@/use/login-form';\r\nexport default {\r\n  setup() {\r\n    return { ...useLoginForm() };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import { computed, watch } from 'vue';\r\nimport * as yup from 'yup';\r\nimport { useField, useForm } from 'vee-validate';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport function useLoginForm() {\r\n  const store = useStore()\r\n  const router = useRouter()\r\n\r\n  const { handleSubmit, isSubmitting, submitCount } = useForm();\r\n  const { value: email, errorMessage: eError, handleBlur: eBlur } = useField(\r\n    'email',\r\n    yup\r\n      .string()\r\n      .trim()\r\n      .required()\r\n      .email('This is must be a valid Email')\r\n  );\r\n\r\n  const MIN_LENGTH = 6;\r\n  const {\r\n    value: password,\r\n    errorMessage: pError,\r\n    handleBlur: pBlur,\r\n  } = useField(\r\n    'password',\r\n    yup\r\n      .string()\r\n      .trim()\r\n      .required('Please enter the Password')\r\n      .min(MIN_LENGTH, `Min length for password must be a ${MIN_LENGTH}`)\r\n  );\r\n\r\n  const isTooManyAttempts = computed(() => {\r\n    return submitCount.value >= 3;\r\n  });\r\n\r\n  watch(isTooManyAttempts, (val) => {\r\n    if (val) {\r\n      setTimeout(() => {\r\n        submitCount.value = 0;\r\n      }, 1500);\r\n    }\r\n  });\r\n\r\n  const onSubmit = handleSubmit(async values => {\r\n    await store.dispatch('auth/login', values)\r\n    router.push('/')\r\n  });\r\n\r\n  return {\r\n    email,\r\n    eError,\r\n    eBlur,\r\n    password,\r\n    pError,\r\n    pBlur,\r\n    MIN_LENGTH,\r\n    onSubmit,\r\n    isSubmitting,\r\n    submitCount,\r\n    isTooManyAttempts,\r\n  };\r\n}","import { render } from \"./Auth.vue?vue&type=template&id=9c5a6548\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}